<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Kevin Mees]]></title>
  <link href="http://kmees.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://kmees.github.com/"/>
  <updated>2012-05-23T09:41:08+02:00</updated>
  <id>http://kmees.github.com/</id>
  <author>
    <name><![CDATA[Kevin Mees]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bypassing the Google Feed API Cache]]></title>
    <link href="http://kmees.github.com/blog/2012/03/29/bypassing-the-google-feed-api-cache/"/>
    <updated>2012-03-29T23:22:00+02:00</updated>
    <id>http://kmees.github.com/blog/2012/03/29/bypassing-the-google-feed-api-cache</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/google_feed_api_meme.png" /></p>

<p>I noticed recently that the download count of the packages in my <a href="https://github.com/kmees/Octopress-NuGet-Aside">NuGet Aside</a> didn't update properly. As I <a href="/blog/2012/02/29/nuget-aside-for-octopress/">mentioned earlier</a>, I use the <a href="https://developers.google.com/feed/">Google Feed API</a> to get the data from the NuGet Gallery feed of an author. This indicrection is needed because the NuGet Gallery API doesn't support the <strong>jsonp</strong> response type (yet). Anyway, the problem is that Google caches the feeds heavily and only adds new entries but doesn't update existing ones. This means that the packages keep their download count of the first request.</p>

<!--more-->


<p>After some experiments, I concluded that the caching behavior is solely based on the feed URL and modifying the URL in a way that it 'looks' different but still returns the same data circumvents the cache. I created a salt function that returns a large number based on the current time which I just append to the URL as an additional query parameter (that gets ignored by the API).
<code>javascript
function salt() {
  var now = new Date();
  var saltDate = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate());
  return saltDate.getTime();
}
</code>
As you may notice, the function returns the same number throughout the whole day. This way, the feed can still be cached but the data gets updated every day which is a good compromise !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Aside for Octopress]]></title>
    <link href="http://kmees.github.com/blog/2012/02/29/nuget-aside-for-octopress/"/>
    <updated>2012-02-29T15:37:00+01:00</updated>
    <id>http://kmees.github.com/blog/2012/02/29/nuget-aside-for-octopress</id>
    <content type="html"><![CDATA[<p>I just finished as aside for <a href="http://www.octopress.org">Octopress</a> that list the
Top N downloaded packages where you are an author. It also adds a link to your
NuGet gallery profile if you have one. The style is basically the same as the style of the github aside.</p>

<p>Since there is no official way to publish 3rd party add-ons for Octopress yet, I
created a <a href="https://github.com/kmees/Octopress-NuGet-Aside">github repository</a> with the required files and setup instructions in the <a href="https://github.com/kmees/Octopress-NuGet-Aside/blob/master/README.md">ReadMe</a>.</p>
]]></content>
  </entry>
  
</feed>
